<!--Copyright (c) 2022 OPTIKEY LTD (UK company number 11854839) - All Rights Reserved-->
<UserControl x:Class="JuliusSweetland.OptiKey.UI.Controls.LayoutEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:controls="clr-namespace:JuliusSweetland.OptiKey.UI.Controls"
             xmlns:mgmt="clr-namespace:JuliusSweetland.OptiKey.UI.ViewModels.Management"
             xmlns:valueConverters="clr-namespace:JuliusSweetland.OptiKey.UI.ValueConverters"
             mc:Ignorable="d" Background="LightBlue">
  <UserControl.Resources>
    <CollectionViewSource x:Key="WindowStates" Source="{Binding Source={x:Static mgmt:LayoutViewModel.WindowStates}}"/>
    <CollectionViewSource x:Key="PositionList" Source="{Binding Source={x:Static mgmt:LayoutViewModel.PositionList}}"/>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <Expander Grid.Row="0" Header="Properties" IsExpanded="True">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Grid.Column="0" Grid.Row="0" Margin="1,0,1,0" Content="Name"/>
        <Label Grid.Column="0" Grid.Row="1" Margin="1,0,1,0" Content="HideFromKeyboardMenu"/>
        <Label Grid.Column="0" Grid.Row="2" Margin="1,0,1,0" Content="ShowOutputPanel"/>
        <Label Grid.Column="0" Grid.Row="3" Margin="1,0,1,0" Content="PersistNewState"/>
        <Label Grid.Column="0" Grid.Row="4" Margin="1,0,1,0" Content="Columns"/>
        <Label Grid.Column="0" Grid.Row="5" Margin="1,0,1,0" Content="Rows"/>
        <Label Grid.Column="0" Grid.Row="6" Margin="1,0,1,0" Content="WindowState"/>
        <Label Grid.Column="0" Grid.Row="7" Margin="1,0,1,0" Content="Position"/>
        <Label Grid.Column="0" Grid.Row="8" Margin="1,0,1,0" Content="Width"/>
        <Label Grid.Column="0" Grid.Row="9" Margin="1,0,1,0" Content="Height"/>
        <Label Grid.Column="0" Grid.Row="10" Margin="1,0,1,0" Content="HorizontalOffset"/>
        <Label Grid.Column="0" Grid.Row="11" Margin="1,0,1,0" Content="VerticaOffset"/>
        <Label Grid.Column="0" Grid.Row="12" Margin="1,0,1,0" Content="BackgroundColor"/>
        <Label Grid.Column="0" Grid.Row="13" Margin="1,0,1,0" Content="BorderColor"/>
        <Label Grid.Column="0" Grid.Row="14" Margin="1,0,1,0" Content="BorderThickness"/>
        
        <TextBox Grid.Column="1" Grid.Row="0" Margin="1,0,1,0" Text="{Binding XmlKeyboard.Name, UpdateSourceTrigger=PropertyChanged}"/>
          <CheckBox Grid.Column="1" Grid.Row="1" Margin="1,0,1,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                  ToolTip="Control accessibility from the dynamic keyboard selector"
                          IsChecked="{Binding XmlKeyboard.Hidden, UpdateSourceTrigger=PropertyChanged}">
          <CheckBox.LayoutTransform>
            <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
          </CheckBox.LayoutTransform>
        </CheckBox>
          <CheckBox Grid.Column="1" Grid.Row="2" Margin="1,0,1,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                          IsChecked="{Binding XmlKeyboard.ShowOutputPanel, UpdateSourceTrigger=PropertyChanged}">
          <CheckBox.LayoutTransform>
            <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
          </CheckBox.LayoutTransform>
        </CheckBox>
        <CheckBox Grid.Column="1" Grid.Row="3" Margin="1,0,1,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                  ToolTip="If set all future keyboards will use the new state settings of this keyboard"
                  IsChecked="{Binding XmlKeyboard.PersistNewState, UpdateSourceTrigger=PropertyChanged}">
          <CheckBox.LayoutTransform>
            <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
          </CheckBox.LayoutTransform>
        </CheckBox>
        <c:NumericUpDown Grid.Column="1" Grid.Row="4" Margin="1,0,1,0" HorizontalContentAlignment="Left" Minimum="1"
                         Value="{Binding XmlKeyboard.Cols, UpdateSourceTrigger=PropertyChanged}" />
        <c:NumericUpDown Grid.Column="1" Grid.Row="5" Margin="1,0,1,0" HorizontalContentAlignment="Left" Minimum="1"
                         Value="{Binding XmlKeyboard.Rows, UpdateSourceTrigger=PropertyChanged}"/>
        <ComboBox Grid.Column="1" Grid.Row="6" Margin="1,0,1,0" ItemsSource="{Binding Source={StaticResource WindowStates}}"
                    SelectedItem="{Binding XmlKeyboard.WindowState, UpdateSourceTrigger=PropertyChanged}"/>
        <ComboBox Grid.Column="1" Grid.Row="7" Margin="1,0,1,0" ItemsSource="{Binding Source={StaticResource PositionList}}"
                    SelectedItem="{Binding XmlKeyboard.Position, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="8" Margin="1,0,1,0"
                 ToolTip="Enter an amount in pixels or use % to specify the percent of the screen (negative values will be offset from screen size)"
                 Text="{Binding XmlKeyboard.Width, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="9" Margin="1,0,1,0"
                 ToolTip="Enter an amount in pixels or use % to specify the percent of the screen (negative values will be offset from screen size)"
                 Text="{Binding XmlKeyboard.Height, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="10" Margin="1,0,1,0"
                 ToolTip="Enter an amount in pixels or use % to specify the percent of the screen"
                 Text="{Binding XmlKeyboard.HorizontalOffset, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="11" Margin="1,0,1,0"
                 ToolTip="Enter an amount in pixels or use % to specify the percent of the screen"
                 Text="{Binding XmlKeyboard.VerticalOffset, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="12" Margin="1,0,1,0"
                 Text="{Binding XmlKeyboard.BackgroundColor, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="13" Margin="1,0,1,0"
                 Text="{Binding XmlKeyboard.BorderColor, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Column="1" Grid.Row="14" Margin="1,0,1,0"
                 Text="{Binding XmlKeyboard.BorderThickness, UpdateSourceTrigger=PropertyChanged}"/>
      </Grid>
    </Expander>
    <Expander Grid.Row="1" Header="Keygroups" IsExpanded="True">
    <StackPanel Orientation="Horizontal">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="5,0" CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding AddProfileCommand}" Content="Add"/>
            </Border>
            <Border Margin="5,0" CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding DeleteProfileCommand}" Content="Delete"/>
            </Border>
          </StackPanel>
          <ListBox x:Name="XmlKeyboardProfileListBox" HorizontalAlignment="Left" Margin="5" MinWidth="120" MinHeight="160" BorderThickness="0"
                 ItemsSource="{Binding Profiles}"
                 SelectedItem="{Binding Profile}"
                 DisplayMemberPath="Name"/>
        </StackPanel>
          <controls:ProfileEditor DataContext="{Binding Profile}"/>
      </StackPanel>
    </Expander>
    <Expander Grid.Row="2" Header="Content" IsExpanded="True">
    <StackPanel Orientation="Horizontal">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="5,0,0,0" CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding AddInteractorCommand}"  Content="Add"/>
            </Border>
          </StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="5,5,5,0"  CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding CloneInteractorCommand}"  Content="Clone"/>
            </Border>
            <Border Margin="5,5,5,0"  CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding DeleteInteractorCommand}"  Content="Delete"/>
            </Border>
          </StackPanel>
            <ListBox Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="5" MinWidth="120" MinHeight="200" MaxHeight="800" BorderThickness="0"
                     ItemsSource="{Binding Interactors}"
                     SelectedItem="{Binding Interactor}">
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition SharedSizeGroup="ssg1"/>
                      <ColumnDefinition SharedSizeGroup="ssg2"/>
                    </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0" Margin="1,0,1,0" Text="{Binding InteractorLabel}"/>
                  <TextBlock Grid.Column="1" Margin="1,0,1,0" Text="{Binding InteractorLocation}"/>
                  </Grid>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <controls:InteractorEditor SelectedInteractorType="{Binding SelectedInteractorType, Mode=TwoWay}"/>
      </StackPanel>
    </Expander>
  </Grid>
</UserControl>
